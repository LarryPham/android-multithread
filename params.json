{"name":"Android-multithread","tagline":"android lib - multithread","body":"#android-multithread\r\n\r\n##Introduction\r\nandroid lib - multithread    \r\nadd a listener to the AsyncTask.\r\n\r\n##System requirements\r\nAndroid 1.5+\r\n\r\n##Dependencies\r\nandroid-log [https://github.com/snowdream/android-log](https://github.com/snowdream/android-log)\r\n\r\n##Download\r\nDownload [the latest jar][1] or grab via Maven:\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>com.github.snowdream.android.util.concurrent</groupId>\r\n  <artifactId>multithread</artifactId>\r\n  <version>1.0</version>\r\n</dependency>\r\n```\r\n\r\nor Gradle:\r\n```groovy\r\n    compile 'com.github.snowdream.android.util.concurrent:multithread:1.0'\r\n```\r\n\r\n##Usage\r\n1.inherit a class from com.github.snowdream.android.util.concurrent.AsyncTask,explicit inherit the construction from the super class.\r\n\r\n```java\r\n//inherit a class from com.github.snowdream.android.util.concurrent.AsyncTask\r\npublic class DownloadFilesTask extends AsyncTask<URL, Integer, Long> {\r\n public DownloadFilesTask(TaskListener<Integer, Long> listener) {\r\n      //explicit inherit the construction from the super class.\r\n      super(listener);\r\n }\r\n       \r\n/**\r\n * TODO \r\n * if error occurs,carry it out.\r\n * \r\n * if (listener != null) {\r\n *    listener.onError(new Throwable());\r\n * }\r\n */\r\nprotected Long doInBackground(URL... urls) {\r\n     int count = urls.length;\r\n     long totalSize = 0;\r\n     for (int i = 0; i < count; i++) {\r\n         totalSize += 10;\r\n         publishProgress((int) ((i / (float) count) * 100));\r\n         // Escape early if cancel() is called\r\n         if (isCancelled()) break;\r\n         try {\r\n            Thread.sleep(1000);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n     }\r\n     return totalSize;\r\n }\r\n}\r\n```\r\n\r\n2.define a TaskListener.please pay attention to the generic parameter Integer and Long,is the same as above.\r\n```java\r\nprivate TaskListener<Integer, Long> listener = new TaskListener<Integer, Long>(){\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        Log.i(\"onStart()\");\r\n    }\r\n\r\n    @Override\r\n    public void onProgressUpdate(Integer... values) {\r\n        super.onProgressUpdate(values);\r\n        Log.i(\"onProgressUpdate(values)\" + values[0] );\r\n    }\r\n\r\n    @Override\r\n    public void onSuccess(Long result) {\r\n        super.onSuccess(result);\r\n        Log.i(\"onSuccess(result)\" + result);\r\n    }\r\n\r\n    @Override\r\n    public void onCancelled() {\r\n        super.onCancelled();\r\n        Log.i(\"onCancelled()\");\r\n    }\r\n\r\n    @Override\r\n    public void onError(Throwable thr) {\r\n        super.onError(thr);\r\n        Log.i(\"onError()\");\r\n    }\r\n\r\n    @Override\r\n    public void onFinish() {\r\n        super.onFinish();\r\n        Log.i(\"onFinish()\");\r\n    }\r\n\t    \r\n};\r\n```\r\n\r\n3.construct a AsyncTask,and carry it out.   \r\n```java\r\nURL url = null;\r\ntry {\r\n    url = new URL(\"http://www.baidu.com/\");\r\n} catch (MalformedURLException e) {\r\n    // TODO Auto-generated catch block\r\n    e.printStackTrace();\r\n}\r\n        \r\nnew DownloadFilesTask(listener).execute(url,url,url);\r\n```\r\n\r\n##License\r\n```\r\n Copyright (C) 2013 Snowdream Mobile\r\n  \r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n  \r\n http://www.apache.org/licenses/LICENSE-2.0\r\n  \r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n```\r\n\r\n[1]:https://oss.sonatype.org/content/groups/public/com/github/snowdream/android/util/concurrent/multithread/1.0/multithread-1.0.jar\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}